[{"C:\\Users\\imlak\\amazon-clone\\src\\App.js":"1","C:\\Users\\imlak\\amazon-clone\\src\\Header.js":"2","C:\\Users\\imlak\\amazon-clone\\src\\reportWebVitals.js":"3","C:\\Users\\imlak\\amazon-clone\\src\\Home.js":"4","C:\\Users\\imlak\\amazon-clone\\src\\Product.js":"5","C:\\Users\\imlak\\amazon-clone\\src\\Checkout.js":"6","C:\\Users\\imlak\\amazon-clone\\src\\Subtotal.js":"7","C:\\Users\\imlak\\amazon-clone\\src\\index.js":"8","C:\\Users\\imlak\\amazon-clone\\src\\StateProvider.js":"9","C:\\Users\\imlak\\amazon-clone\\src\\reducer.js":"10","C:\\Users\\imlak\\amazon-clone\\src\\CheckoutProduct.js":"11","C:\\Users\\imlak\\amazon-clone\\src\\Login.js":"12","C:\\Users\\imlak\\amazon-clone\\src\\firebase.js":"13","C:\\Users\\imlak\\amazon-clone\\src\\Payment.js":"14","C:\\Users\\imlak\\amazon-clone\\src\\axios.js":"15","C:\\Users\\imlak\\amazon-clone\\src\\Orders.js":"16","C:\\Users\\imlak\\amazon-clone\\src\\Order.js":"17"},{"size":1643,"mtime":1612007218380,"results":"18","hashOfConfig":"19"},{"size":2248,"mtime":1611226071448,"results":"20","hashOfConfig":"19"},{"size":401,"mtime":1610442495063,"results":"21","hashOfConfig":"19"},{"size":2952,"mtime":1612256971805,"results":"22","hashOfConfig":"19"},{"size":1211,"mtime":1611222973101,"results":"23","hashOfConfig":"19"},{"size":1350,"mtime":1611224194492,"results":"24","hashOfConfig":"19"},{"size":1140,"mtime":1611321199034,"results":"25","hashOfConfig":"19"},{"size":688,"mtime":1610616574643,"results":"26","hashOfConfig":"19"},{"size":430,"mtime":1610616647492,"results":"27","hashOfConfig":"19"},{"size":1315,"mtime":1612194831278,"results":"28","hashOfConfig":"19"},{"size":1334,"mtime":1612254143196,"results":"29","hashOfConfig":"19"},{"size":2245,"mtime":1611222146106,"results":"30","hashOfConfig":"19"},{"size":609,"mtime":1611220692303,"results":"31","hashOfConfig":"19"},{"size":6084,"mtime":1612256481309,"results":"32","hashOfConfig":"19"},{"size":157,"mtime":1612003704929,"results":"33","hashOfConfig":"19"},{"size":1036,"mtime":1612195076025,"results":"34","hashOfConfig":"19"},{"size":1247,"mtime":1612195122916,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"1lh742j",{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\imlak\\amazon-clone\\src\\App.js",["79","80"],"import React, { useEffect } from 'react'\nimport './App.css'\nimport Header from './Header'\nimport Home from './Home'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Checkout from './Checkout'\nimport Login from './Login'\nimport { auth } from './firebase'\nimport { useStateValue } from './StateProvider'\nimport Payment from './Payment'\nimport { loadStripe } from '@stripe/stripe-js'\nimport { Elements } from '@stripe/react-stripe-js'\nimport Orders from './Orders'\n\nconst promise = loadStripe('pk_test_51IE9CMK7w0fZQidOr2fgDElf5VdIHQ2BUZyBM0qkOTuQgQ7mbvTkZAY2ROJnd9L9hZVvAhdK22fQ1FTnzbe7XXaZ00Ij05f9lK')\n\nfunction App() {\n  const [{}, dispatch] = useStateValue()\n  useEffect(()=>{\n    auth.onAuthStateChanged(authUser =>{\n      console.log('The user is :', authUser)\n      if(authUser) {\n          dispatch({\n            type: 'SET_USER',\n            user: authUser\n          })\n      }\n      else {\n        dispatch({\n          type: 'SET_USER',\n          user: null\n        })\n      }\n    } )\n  }, [])\n\n\n  return (\n    <Router>\n    <div className=\"app\">\n      <Switch>\n\n        <Route path=\"/orders\" >\n        <Header />\n        <Orders />\n        </Route>\n\n        <Route path=\"/login\" >\n        <Login />\n        </Route>\n\n        <Route path=\"/checkout\">\n        <Header />\n        <Checkout />\n        </Route>\n\n        <Route path=\"/payment\">\n        <Header />\n        <Elements stripe={promise}>\n          <Payment />\n        </Elements>\n        </Route>\n\n        <Route path=\"/\">\n        <Header />\n        <Home />\n        </Route>\n\n      </Switch>\n\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n",["81","82"],"C:\\Users\\imlak\\amazon-clone\\src\\Header.js",["83"],"import React from 'react'\r\nimport './Header.css'\r\nimport { GrSearch } from 'react-icons/gr';\r\nimport { MdShoppingBasket } from 'react-icons/md';\r\nimport { Link } from 'react-router-dom'\r\nimport { useStateValue } from './StateProvider';\r\nimport { auth } from './firebase'\r\n\r\nfunction Header() {\r\n    const [{ basket, user }, dispatch] = useStateValue()\r\n    const handleAuthentication = () => {\r\n        if (user) {\r\n            auth.signOut();\r\n        }\r\n    }\r\n    return (\r\n        <div className='header'>\r\n        <Link to=\"/\" >\r\n        <img \r\n        className=\"header_logo\"\r\n        src=\"https://pngimg.com/uploads/amazon/amazon_PNG11.png\" \r\n        alt=\"\"\r\n        />\r\n        </Link>\r\n\r\n        <div \r\n        className=\"header_search\">\r\n           <input \r\n           className=\"header_searchInput\"\r\n           type=\"text\" \r\n           />\r\n           <GrSearch className=\"header_searchIcon\" />\r\n        </div>\r\n        <div className=\"header_nav\" >\r\n        <Link to={!user && '/login'} >\r\n           <div onClick={handleAuthentication} className=\"header_option\" >\r\n             <span className=\"header_optionLineOne\">\r\n                 Hi {!user ? 'Guest' : user.email} \r\n             </span>\r\n             <span className=\"header_optionLineTwo\">\r\n              { user ? 'Sign Out' : 'Sign In' } \r\n             </span>\r\n           </div>\r\n        </Link>\r\n\r\n           <div className=\"header_option\" >\r\n           <span className=\"header_optionLineOne\">\r\n                 Returns\r\n             </span>\r\n             <span className=\"header_optionLineTwo\">\r\n                 & Orders\r\n             </span>\r\n           </div>\r\n\r\n           <div className=\"header_option\" >\r\n           <span className=\"header_optionLineOne\">\r\n                 Your \r\n             </span>\r\n             <span className=\"header_optionLineTwo\">\r\n                 Prime\r\n             </span>\r\n           </div>\r\n           <Link to=\"/checkout\" >\r\n           <div className=\"header_optionBasket\" >\r\n                <MdShoppingBasket />\r\n                <span className=\"header_optionLineTwo \r\n                header_basketCount\">{basket?.length}</span>\r\n           </div>\r\n           </Link>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n",["84","85"],"C:\\Users\\imlak\\amazon-clone\\src\\reportWebVitals.js",[],"C:\\Users\\imlak\\amazon-clone\\src\\Home.js",[],"C:\\Users\\imlak\\amazon-clone\\src\\Product.js",["86"],"import React from 'react'\r\nimport './Product.css'\r\nimport { useStateValue } from './StateProvider'\r\n\r\nfunction Product({ id, title, image, price, rating }) {\r\n    const [{ basket }, dispatch]= useStateValue()\r\n    // console.log('This is the basket');\r\n    const addToBasket = () =>{\r\n      dispatch({\r\n          type: 'ADD_TO_BASKET',\r\n          item: {\r\n              id:id,\r\n              title:title,\r\n              image:image,\r\n              price:price,\r\n              rating:rating\r\n          }\r\n      })\r\n    }\r\n    return (\r\n        <div className=\"product\" >\r\n            <div className=\"product_info\" >\r\n                <p>{title}</p>\r\n                <p className='product_price' >\r\n                    <small>$</small>\r\n                    <strong>{price}</strong>\r\n                </p>\r\n                <div className=\"product_rating\" >\r\n                    {Array(rating).fill().map((_, i)=>(\r\n                        <p>‚≠ê</p>   ))}\r\n                </div>\r\n               \r\n                <img src={image} alt=\"\" height=\"400px\" width=\"300px\" />\r\n            </div>\r\n                <button onClick={addToBasket} >Add to Basket</button>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","C:\\Users\\imlak\\amazon-clone\\src\\Checkout.js",["87"],"import React from 'react'\r\nimport './Checkout.css'\r\nimport Subtotal from './Subtotal'\r\nimport CheckoutProduct from './CheckoutProduct'\r\nimport { useStateValue } from './StateProvider'\r\n\r\nfunction Checkout() {\r\n    const [{ basket, user }, dispatch] = useStateValue();\r\n\r\n    return (\r\n        <div className=\"checkout\" >\r\n            <div className=\"checkout_left\" >\r\n                <img \r\n                className=\"checkout_ad\" \r\n                src=\"https://images-na.ssl-images-amazon.com/images/G/02/UK_CCMP/TM/OCC_Amazon1._CB423492668_.jpg\" \r\n                alt=\"\"\r\n                />\r\n                <div>\r\n                    <h3> Hello, {user?.email} </h3>\r\n                    <h2 className=\"checkout_title\" >\r\n                     This is Your Shopping Basket\r\n                    </h2>\r\n                    {basket.map(item => (\r\n                        <CheckoutProduct \r\n                        id={item.id}\r\n                        title={item.title}\r\n                        image={item.image}\r\n                        price={item.price}\r\n                        rating={item.rating}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div className=\"checkout_right\">\r\n                <Subtotal />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkout\r\n","C:\\Users\\imlak\\amazon-clone\\src\\Subtotal.js",["88"],"C:\\Users\\imlak\\amazon-clone\\src\\index.js",[],"C:\\Users\\imlak\\amazon-clone\\src\\StateProvider.js",["89"],"import React, { createContext, useContext, useReducer } from 'react'\r\nimport { initialState } from './reducer'\r\n\r\nexport const StateContext = createContext()\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n       <StateContext.Provider value={useReducer(reducer,initialState)} >\r\n             {children}\r\n       </StateContext.Provider>\r\n)\r\n\r\nexport const useStateValue = () => useContext(StateContext)",["90","91"],"C:\\Users\\imlak\\amazon-clone\\src\\reducer.js",[],"C:\\Users\\imlak\\amazon-clone\\src\\CheckoutProduct.js",["92"],"C:\\Users\\imlak\\amazon-clone\\src\\Login.js",[],"C:\\Users\\imlak\\amazon-clone\\src\\firebase.js",[],"C:\\Users\\imlak\\amazon-clone\\src\\Payment.js",["93","94"],"import React, { useState, useEffect } from 'react';\r\nimport './Payment.css';\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport CheckoutProduct from \"./CheckoutProduct\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport { getBasketTotal } from \"./reducer\";\r\nimport axios from './axios';\r\nimport { db } from \"./firebase\";\r\n\r\nfunction Payment() {\r\n    const [{ basket, user }, dispatch] = useStateValue();\r\n    const history = useHistory();\r\n\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    const [succeeded, setSucceeded] = useState(false);\r\n    const [processing, setProcessing] = useState(\"\");\r\n    const [error, setError] = useState(null);\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [clientSecret, setClientSecret] = useState(true);\r\n\r\n    useEffect(() => {\r\n        // generate the special stripe secret which allows us to charge a customer\r\n        const getClientSecret = async () => {\r\n            const response = await axios({\r\n                method: 'post',\r\n                // Stripe expects the total in a currencies subunits\r\n                url: `/payments/create?total=${getBasketTotal(basket) * 100}`\r\n            });\r\n            setClientSecret(response.data.clientSecret)\r\n        }\r\n\r\n        getClientSecret();\r\n    }, [basket])\r\n\r\n    console.log('THE SECRET IS >>>', clientSecret)\r\n    console.log('üë±', user)\r\n    const handleSubmit = async (event) => {\r\n        // do all the fancy stripe stuff...\r\n        event.preventDefault();\r\n        setProcessing(true);\r\n\r\n        const payload = await stripe.confirmCardPayment(clientSecret, {\r\n            payment_method: {\r\n                card: elements.getElement(CardElement)\r\n            }\r\n        }).then(({ paymentIntent }) => {\r\n            // paymentIntent = payment confirmation\r\n\r\n            // db\r\n            //  .collection('users')\r\n            //  .doc(user?.uid)\r\n            //  .collection('orders')\r\n            //  .doc(paymentIntent.id)\r\n            //  .set({\r\n            //      basket: basket,\r\n            //      amount: paymentIntent.amount,\r\n            //      created: paymentIntent.created\r\n            //  })   \r\n\r\n            setSucceeded(true);\r\n            setError(null)\r\n            setProcessing(false)\r\n\r\n            dispatch({\r\n                type: 'EMPTY_BASKET'\r\n            })\r\n\r\n            history.replace('/')\r\n        })\r\n\r\n    }\r\n\r\n    const handleChange = event => {\r\n        // Listen for changes in the CardElement\r\n        // and display any errors as the customer types their card details\r\n        setDisabled(event.empty);\r\n        setError(event.error ? event.error.message : \"\");\r\n    }\r\n\r\n    return (\r\n        <div className='payment'>\r\n            <div className='payment_container'>\r\n                <h1>\r\n                    Checkout (\r\n                        <Link to=\"/checkout\">{basket?.length} items</Link>\r\n                        )\r\n                </h1>\r\n\r\n\r\n                {/* Payment section - delivery address */}\r\n                <div className='payment_section'>\r\n                    <div className='payment_title'>\r\n                        <h3>Delivery Address</h3>\r\n                    </div>\r\n                    <div className='payment_address'>\r\n                        <p>{user?.email}</p>\r\n                        <p>123 React Lane</p>\r\n                        <p>Los Angeles, CA</p>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Payment section - Review Items */}\r\n                <div className='payment_section'>\r\n                    <div className='payment_title'>\r\n                        <h3>Review items and delivery</h3>\r\n                    </div>\r\n                    <div className='payment_items'>\r\n                        {basket.map(item => (\r\n                            <CheckoutProduct\r\n                                id={item.id}\r\n                                title={item.title}\r\n                                image={item.image}\r\n                                price={item.price}\r\n                                rating={item.rating}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            \r\n\r\n                {/* Payment section - Payment method */}\r\n                <div className='payment_section'>\r\n                    <div className=\"payment_title\">\r\n                        <h3>Payment Method</h3>\r\n                    </div>\r\n                    <div className=\"payment_details\">\r\n                            {/* Stripe magic will go */}\r\n\r\n                            <form onSubmit={handleSubmit}>\r\n                                <CardElement onChange={handleChange}/>\r\n\r\n                                <div className='payment_priceContainer'>\r\n                                    <CurrencyFormat\r\n                                        renderText={(value) => (\r\n                                            <h3>Order Total: {value}</h3>\r\n                                        )}\r\n                                        decimalScale={2}\r\n                                        value={getBasketTotal(basket)}\r\n                                        displayType={\"text\"}\r\n                                        thousandSeparator={true}\r\n                                        prefix={\"$\"}\r\n                                    />\r\n                                    <button disabled={processing || disabled || succeeded}>\r\n                                        <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\r\n                                    </button>\r\n                                </div>\r\n\r\n                                  {/* Errors */}\r\n                                {error && <div>{error}</div>}\r\n                            </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Payment\r\n","C:\\Users\\imlak\\amazon-clone\\src\\axios.js",[],"C:\\Users\\imlak\\amazon-clone\\src\\Orders.js",["95","96"],"C:\\Users\\imlak\\amazon-clone\\src\\Order.js",[],{"ruleId":"97","severity":1,"message":"98","line":18,"column":10,"nodeType":"99","messageId":"100","endLine":18,"endColumn":12},{"ruleId":"101","severity":1,"message":"102","line":35,"column":6,"nodeType":"103","endLine":35,"endColumn":8,"suggestions":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":10,"column":30,"nodeType":"111","messageId":"112","endLine":10,"endColumn":38},{"ruleId":"105","replacedBy":"113"},{"ruleId":"107","replacedBy":"114"},{"ruleId":"109","severity":1,"message":"115","line":6,"column":14,"nodeType":"111","messageId":"112","endLine":6,"endColumn":20},{"ruleId":"109","severity":1,"message":"110","line":8,"column":30,"nodeType":"111","messageId":"112","endLine":8,"endColumn":38},{"ruleId":"109","severity":1,"message":"110","line":10,"column":26,"nodeType":"111","messageId":"112","endLine":10,"endColumn":34},{"ruleId":"109","severity":1,"message":"116","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":22},{"ruleId":"105","replacedBy":"117"},{"ruleId":"107","replacedBy":"118"},{"ruleId":"109","severity":1,"message":"115","line":6,"column":14,"nodeType":"111","messageId":"112","endLine":6,"endColumn":20},{"ruleId":"109","severity":1,"message":"119","line":10,"column":10,"nodeType":"111","messageId":"112","endLine":10,"endColumn":12},{"ruleId":"109","severity":1,"message":"120","line":46,"column":15,"nodeType":"111","messageId":"112","endLine":46,"endColumn":22},{"ruleId":"109","severity":1,"message":"115","line":8,"column":12,"nodeType":"111","messageId":"112","endLine":8,"endColumn":18},{"ruleId":"109","severity":1,"message":"110","line":8,"column":28,"nodeType":"111","messageId":"112","endLine":8,"endColumn":36},"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["121"],"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar",["122"],["123"],"'basket' is assigned a value but never used.","'initialState' is defined but never used.",["122"],["123"],"'db' is defined but never used.","'payload' is assigned a value but never used.",{"desc":"124","fix":"125"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [dispatch]",{"range":"126","text":"127"},[1029,1031],"[dispatch]"]